paths:
  /api/products:
    get:
      summary: "Obtener productos"
      description: "Obtiene una lista de productos con opciones de paginación, filtrado y ordenamiento."
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: "Número de la página"
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: "Límite de productos por página"
        - in: query
          name: categoria
          schema:
            type: string
          description: "Filtrar productos por categoría"
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
          description: "Ordenar productos por precio"
        - in: query
          name: disponible
          schema:
            type: boolean
          description: "Filtrar productos por disponibilidad"
      responses:
        '200':
          description: "Lista de productos obtenida exitosamente"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalPages:
                    type: integer
                  prevPage:
                    type: integer
                  nextPage:
                    type: integer
                  page:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevLink:
                    type: string
                    nullable: true
                  nextLink:
                    type: string
                    nullable: true
        '500':
          description: "Error al obtener los productos"

  /api/products/{id}:
    get:
      summary: "Obtener producto por ID"
      description: "Obtiene un producto específico por su ID."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: "ID del producto"
      responses:
        '200':
          description: "Producto obtenido exitosamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: "Producto no encontrado"
        '500':
          description: "Error al obtener el producto"

    put:
      summary: "Actualizar producto"
      description: "Actualiza los detalles de un producto específico."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: "ID del producto"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: "Producto actualizado exitosamente"
        '400':
          description: "Error de validación al actualizar el producto"
        '404':
          description: "Producto no encontrado"
        '500':
          description: "Error al actualizar el producto"

    delete:
      summary: "Eliminar producto"
      description: "Elimina un producto específico por su ID."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: "ID del producto"
      responses:
        '200':
          description: "Producto eliminado exitosamente"
        '404':
          description: "Producto no encontrado"
        '500':
          description: "Error al eliminar el producto"

    post:
      summary: "Crear nuevo producto"
      description: "Crea un nuevo producto."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: "Producto creado exitosamente"
        '400':
          description: "Error de validación al crear el producto"
        '500':
          description: "Error al crear el producto"

components:
  schemas:
    Product:
      type: object
      properties:
        titulo:
          type: string
          example: "Producto de ejemplo"
        descripcion:
          type: string
          example: "Descripción del producto de ejemplo"
        precio:
          type: number
          example: 99.99
        thumbnail:
          type: string
          example: "https://example.com/imagen.png"
        categoria:
          type: string
          example: "Electrónica"
        code:
          type: string
          example: "ABC123"
        stock:
          type: integer
          example: 10
        disponible:
          type: boolean
          example: true